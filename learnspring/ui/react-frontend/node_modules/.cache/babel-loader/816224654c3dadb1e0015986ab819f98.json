{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Downloads/My Projects/learnspring/ui/react-frontend/src/components/EmployeeEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { AppNavbar } from './AppNavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EmployeeEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.emptyItem = {\n      name: '',\n      dept: '',\n      address: '',\n      email: '',\n      mobile: ''\n    };\n    this.state = {\n      item: this.emptyItem\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.id !== 'new') {\n      const employee = await (await fetch(`/employees/${this.props.match.params.id}`)).json();\n      this.setState({\n        item: employee\n      });\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let item = { ...this.state.item\n    };\n    item[name] = value;\n    this.setState({\n      item\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const {\n      item\n    } = this.state;\n    await fetch('/employees' + (item.id ? '/' + item.id : ''), {\n      method: item.id ? 'PUT' : 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    });\n    this.props.history.push('/employees');\n  }\n\n  render() {\n    const {\n      item\n    } = this.state;\n\n    const title = /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: item.id ? 'Edit Employee' : 'Add Employee'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [title, /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              value: item.name || '',\n              onChange: this.handleChange,\n              autoComplete: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"dept\",\n              children: \"Dept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"dept\",\n              id: \"dept\",\n              value: item.dept || '',\n              onChange: this.handleChange,\n              autoComplete: \"dept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"address\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"address\",\n              id: \"address\",\n              value: item.address || '',\n              onChange: this.handleChange,\n              autoComplete: \"address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"email\",\n              id: \"email\",\n              value: item.email || '',\n              onChange: this.handleChange,\n              autoComplete: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"mobile\",\n              children: \"Mobile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"mobile\",\n              id: \"mobile\",\n              value: item.mobile || '',\n              onChange: this.handleChange,\n              autoComplete: \"mobile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              tag: Link,\n              to: \"/employees\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(EmployeeEdit);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/tushar/Downloads/My Projects/learnspring/ui/react-frontend/src/components/EmployeeEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","AppNavbar","EmployeeEdit","constructor","props","emptyItem","name","dept","address","email","mobile","state","item","handleChange","bind","handleSubmit","componentDidMount","match","params","id","employee","fetch","json","setState","event","target","value","preventDefault","method","headers","body","JSON","stringify","history","push","render","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { AppNavbar } from './AppNavBar';\n\nclass EmployeeEdit extends Component {\n\n    emptyItem = {\n        name: '',\n        dept: '',\n        address: '',\n        email: '',\n        mobile: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\nasync componentDidMount(){\n    if (this.props.match.params.id !== 'new') {\n        const employee = await (await fetch(`/employees/${this.props.match.params.id}`)).json();\n        this.setState({item: employee});\n    }\n}\nhandleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let item = {...this.state.item};\n    item[name] = value;\n    this.setState({item});\n}\nasync handleSubmit(event) {\n    event.preventDefault();\n    const {item} = this.state;\n\n    await fetch('/employees' + (item.id ? '/' + item.id : ''), {\n        method: (item.id) ? 'PUT' : 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item),\n    });\n    this.props.history.push('/employees');\n}\nrender() {\n    const {item} = this.state;\n    const title = <h2>{item.id ? 'Edit Employee' : 'Add Employee'}</h2>;\n\n    return <div>\n        <AppNavbar/>\n        <Container>\n            {title}\n            <Form onSubmit={this.handleSubmit}>\n                <FormGroup>\n                    <Label for=\"name\">Name</Label>\n                    <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''}\n                           onChange={this.handleChange} autoComplete=\"name\"/>\n                </FormGroup>\n                <FormGroup>\n                                    <Label for=\"dept\">Dept</Label>\n                                    <Input type=\"text\" name=\"dept\" id=\"dept\" value={item.dept || ''}\n                                           onChange={this.handleChange} autoComplete=\"dept\"/>\n                                </FormGroup>\n                <FormGroup>\n                                    <Label for=\"address\">Address</Label>\n                                    <Input type=\"text\" name=\"address\" id=\"address\" value={item.address || ''}\n                                           onChange={this.handleChange} autoComplete=\"address\"/>\n                                </FormGroup>\n                <FormGroup>\n                    <Label for=\"email\">Email</Label>\n                    <Input type=\"text\" name=\"email\" id=\"email\" value={item.email || ''}\n                           onChange={this.handleChange} autoComplete=\"email\"/>\n                </FormGroup>\n                <FormGroup>\n                                    <Label for=\"mobile\">Mobile</Label>\n                                    <Input type=\"text\" name=\"mobile\" id=\"mobile\" value={item.mobile || ''}\n                                           onChange={this.handleChange} autoComplete=\"mobile\"/>\n                                </FormGroup>\n                <FormGroup>\n                    <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                    <Button color=\"secondary\" tag={Link} to=\"/employees\">Cancel</Button>\n                </FormGroup>\n            </Form>\n        </Container>\n    </div>\n}\n}\nexport default withRouter(EmployeeEdit);"]},"metadata":{},"sourceType":"module"}