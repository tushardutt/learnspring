{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Downloads/My Projects/learnspring/ui/react-frontend/src/components/PaginatedResult.js\";\nimport React, { Component } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport PropTypes from \"prop-types\";\n\nclass PaginationResult extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = nextProps => {\n      this.setState({\n        totalRecords: nextProps ? nextProps.totalRecords : this.props.totalRecords\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        activePage: page\n      });\n      this.props.getUsers(page);\n    };\n\n    this.componentWillReceiveProps = nextProps => {\n      this.componentDidMount(nextProps);\n    };\n\n    this.state = {\n      totalRecords: 0,\n      activePage: 1,\n      limit: 6\n    };\n  } //Handle total records if comes\n\n\n  //Return pagination UI\n  render() {\n    let {\n      activePage,\n      limit,\n      totalRecords\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pagination-wrapper\",\n      style: {\n        marginLeft: \"30%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Pagination, {\n      \"aria-label\": \"Page navigation example\",\n      itemClass: \"page-item\",\n      linkClass: \"page-link\",\n      prevPageText: \"Prev\",\n      nextPageText: \"Next\",\n      firstPageText: \"First\",\n      lastPageText: \"Last\",\n      activePage: activePage,\n      itemsCountPerPage: limit,\n      totalItemsCount: totalRecords,\n      onChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nPaginationResult.propTypes = {\n  totalRecords: PropTypes.any,\n  limit: PropTypes.any,\n  activePage: PropTypes.any,\n  getUser: PropTypes.any\n};\nexport default PaginationResult;","map":{"version":3,"sources":["/home/tushar/Downloads/My Projects/learnspring/ui/react-frontend/src/components/PaginatedResult.js"],"names":["React","Component","Pagination","PropTypes","PaginationResult","constructor","props","componentDidMount","nextProps","setState","totalRecords","handlePageChange","page","activePage","getUsers","componentWillReceiveProps","state","limit","render","marginLeft","propTypes","any","getUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACvCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,iBATmB,GASCC,SAAS,IAAI;AAC/B,WAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAEF,SAAS,GAAGA,SAAS,CAACE,YAAb,GAA4B,KAAKJ,KAAL,CAAWI;AADlD,OAAd;AAGD,KAbkB;;AAAA,SAgBnBC,gBAhBmB,GAgBAC,IAAI,IAAI;AACzB,WAAKH,QAAL,CAAc;AACZI,QAAAA,UAAU,EAAED;AADA,OAAd;AAGA,WAAKN,KAAL,CAAWQ,QAAX,CAAoBF,IAApB;AACD,KArBkB;;AAAA,SAuBnBG,yBAvBmB,GAuBSP,SAAS,IAAI;AACvC,WAAKD,iBAAL,CAAuBC,SAAvB;AACD,KAzBkB;;AAEjB,SAAKQ,KAAL,GAAa;AACXN,MAAAA,YAAY,EAAE,CADH;AAEXG,MAAAA,UAAU,EAAE,CAFD;AAGXI,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD,GARsC,CASvC;;;AAmBA;AACAC,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEL,MAAAA,UAAF;AAAcI,MAAAA,KAAd;AAAqBP,MAAAA;AAArB,QAAsC,KAAKM,KAA/C;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,KAAK,EAAE;AAAEG,QAAAA,UAAU,EAAE;AAAd,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,oBAAW,yBADb;AAEE,MAAA,SAAS,EAAC,WAFZ;AAGE,MAAA,SAAS,EAAC,WAHZ;AAIE,MAAA,YAAY,EAAC,MAJf;AAKE,MAAA,YAAY,EAAC,MALf;AAME,MAAA,aAAa,EAAC,OANhB;AAOE,MAAA,YAAY,EAAC,MAPf;AAQE,MAAA,UAAU,EAAEN,UARd;AASE,MAAA,iBAAiB,EAAEI,KATrB;AAUE,MAAA,eAAe,EAAEP,YAVnB;AAWE,MAAA,QAAQ,EAAE,KAAKC,gBAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAiBD;;AAhDsC;;AAmDzCP,gBAAgB,CAACgB,SAAjB,GAA6B;AAC3BV,EAAAA,YAAY,EAAEP,SAAS,CAACkB,GADG;AAE3BJ,EAAAA,KAAK,EAAEd,SAAS,CAACkB,GAFU;AAG3BR,EAAAA,UAAU,EAAEV,SAAS,CAACkB,GAHK;AAI3BC,EAAAA,OAAO,EAAEnB,SAAS,CAACkB;AAJQ,CAA7B;AAOA,eAAejB,gBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport PropTypes from \"prop-types\";\n\nclass PaginationResult extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalRecords: 0,\n      activePage: 1,\n      limit: 6\n    };\n  }\n  //Handle total records if comes\n  componentDidMount = nextProps => {\n    this.setState({\n      totalRecords: nextProps ? nextProps.totalRecords : this.props.totalRecords\n    });\n  };\n\n  //Handle Page Change\n  handlePageChange = page => {\n    this.setState({\n      activePage: page\n    });\n    this.props.getUsers(page);\n  };\n\n  componentWillReceiveProps = nextProps => {\n    this.componentDidMount(nextProps);\n  };\n\n  //Return pagination UI\n  render() {\n    let { activePage, limit, totalRecords } = this.state;\n    return (\n      <div className=\"pagination-wrapper\" style={{ marginLeft: \"30%\" }}>\n        <Pagination\n          aria-label=\"Page navigation example\"\n          itemClass=\"page-item\"\n          linkClass=\"page-link\"\n          prevPageText=\"Prev\"\n          nextPageText=\"Next\"\n          firstPageText=\"First\"\n          lastPageText=\"Last\"\n          activePage={activePage}\n          itemsCountPerPage={limit}\n          totalItemsCount={totalRecords}\n          onChange={this.handlePageChange}\n        />\n      </div>\n    );\n  }\n}\n\nPaginationResult.propTypes = {\n  totalRecords: PropTypes.any,\n  limit: PropTypes.any,\n  activePage: PropTypes.any,\n  getUser: PropTypes.any\n};\n\nexport default PaginationResult;"]},"metadata":{},"sourceType":"module"}